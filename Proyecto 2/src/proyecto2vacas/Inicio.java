package proyecto2vacas;

import java.awt.Image;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author Ludwing_98
 */
public class Inicio extends javax.swing.JFrame {

    public int noestaciones,noaviones,turno=0,turnoDesabordaje,turnoMantenimiento;
    public ColaPasajero cp;
    public ListaAvion la;
    public ListaCircularMaletas lcm;
    public ListaMantenimiento lm;
    public ListaEscritorio le;
    public ColaMantenimiento cm;
    NodoAvion avion;
  
    public Inicio() {
        initComponents();
        pasarTurno.enable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Consola = new javax.swing.JTextArea();
        noAviones = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        noEstaciones = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comenzar = new javax.swing.JButton();
        pasarTurno = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Listairport");
        setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        Consola.setColumns(20);
        Consola.setRows(5);
        jScrollPane1.setViewportView(Consola);

        noAviones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noAvionesActionPerformed(evt);
            }
        });

        jLabel1.setText("Cantidad de Aviones");

        jLabel2.setText("No. Estaciones de Mantenimiento");

        comenzar.setText("Comenzar");
        comenzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comenzarActionPerformed(evt);
            }
        });

        pasarTurno.setText("Pasar Turno");
        pasarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasarTurnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(noEstaciones)
                            .addComponent(noAviones, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comenzar)
                        .addGap(28, 28, 28)
                        .addComponent(pasarTurno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noAviones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noEstaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comenzar)
                    .addComponent(pasarTurno))
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comenzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comenzarActionPerformed
        noaviones= Integer.parseInt(noAviones.getText());
        noestaciones= Integer.parseInt(noEstaciones.getText());
        cp= new ColaPasajero();
        la= new ListaAvion();
        lcm= new ListaCircularMaletas();
        lm = new ListaMantenimiento();
        le= new ListaEscritorio();
        cm= new ColaMantenimiento();
        pasarTurno.enable(true);
    }//GEN-LAST:event_comenzarActionPerformed

    private void noAvionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noAvionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noAvionesActionPerformed
    public void agregarArea(){
        Consola.setText("-------Pasajeros-------\n"+cp.mostrarLista(Consola)+"-------Escritorios-------\n"+le.mostrarInicio()+
                "-------Aviones-------\n"+la.mostrarInicio(turno, Consola)+
                "-------Maletas-------\n"+lcm.mostrar(Consola)+"-------Mantenimiento-------\n"+lm.mostrarLista()+"-------Cola Mantenimiento-------\n"+cm.mostrarLista(Consola));
    }
    public void imagenAviones(){
        ImageIcon imagen = new ImageIcon("listadoble.png");
        imagen.getImage().hashCode();
        imagen.getImage().flush();
        Imagenes grafi = new Imagenes();
        grafi.LlegadaAviones.repaint();
        grafi.LlegadaAviones.setIcon(imagen);
        grafi.LlegadaAviones.repaint();
    }
    public void imagenPasajeros(){
        ImageIcon imagen = new ImageIcon("Pasajeros.png");
        imagen.getImage().hashCode();
        imagen.getImage().flush();
        Imagenes grafi = new Imagenes();
        grafi.ColaPasajeros.repaint();
        grafi.ColaPasajeros.setIcon(imagen);
        grafi.ColaPasajeros.repaint();
    }
    Imagenes grafi = new Imagenes();
    Graficador d = new Graficador();
    public void imagenMaletas(){
        
        d.crearDotMaletas(lcm.cabeza, "ListaCircular");
        d.generarImagenPasajero("ListaCircular.dot", "Maletas.png");
        
        ImageIcon imagen = new ImageIcon("Maletas.png");
        Icon maleta = new ImageIcon(imagen.getImage().getScaledInstance(grafi.Maletas.getWidth(), grafi.Maletas.getHeight(), Image.SCALE_DEFAULT));
        //imagen.getImage().hashCode();
        //imagen.getImage().flush();

        //grafi.Maletas.repaint();
        grafi.Maletas.setIcon(maleta);
        grafi.Maletas.repaint();
        //grafi.repaint();
        grafi.Maletas.setVisible(true);
    }
    public void imagenEscritorios(){
    }
    public void imagenMantenimiento(){
    }
    public void imagenColaEscritorios(){
    }
    public void imagenTodos(){
    }
    public void ponerImagenes(){
        imagenAviones();
        imagenPasajeros();
        imagenMaletas();
        //grafi.repaint();
    }
    private void pasarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasarTurnoActionPerformed
        turno++;
        System.out.println(""+turno+" tama√±o "+la.size());
        limpiarArea();
        if(la.size()<=noaviones) {
            la.agregarFinal();
            agregarPasajeros();
            agregarMaletas();
            agregarArea();
            eliminarPasajeros();
            eliminarMaletas();
            AgManEliminar();
            la.disminuirTurno();
            lm.disminuirTurno();
            eliminarAviones();
            ponerImagenes();
            imagenMaletas();
            Graficador d = new Graficador();
            try {
                d.crearDotTodos(la.inicio, cp.inicio, "todos");
                d.crearDotAvion(la.inicio, "ListaDoble");
                d.crearDotPasajero(cp.inicio, "ColaPasajeros");
                
            } catch (IOException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
            d.generarImagenPasajero("todos", "completo.png");
            d.generarImagenPasajero("ColaPasajeros.dot", "Pasajeros.png");
        d.generarImagenPasajero("ListaDoble.dot", "listadoble.png");
        
           /* NodoAvion aux= la.inicio;
            while(aux!=null){
                if (aux.avion.turnosDesabordaje==0) {
                    la.delete(0);
                }
                aux= aux.siguiente;
            }*/
        }else{
            agregarArea();
            eliminarPasajeros();
            eliminarMaletas();
            AgManEliminar();
            la.disminuirTurno();
            lm.disminuirTurno();
            eliminarAviones();
            ponerImagenes();
            imagenMaletas();
            Graficador d = new Graficador();
            try {
                d.crearDotTodos(la.inicio, cp.inicio, "todos");
                d.crearDotAvion(la.inicio, "ListaDoble");
                d.crearDotPasajero(cp.inicio, "ColaPasajeros");
                d.crearDotMaletas(lcm.cabeza, "ListaCircular");
            } catch (IOException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
            d.generarImagenPasajero("todos", "completo.png");
            d.generarImagenPasajero("ColaPasajeros.dot", "Pasajeros.png");
        d.generarImagenPasajero("ListaDoble.dot", "listadoble.png");
        d.generarImagenPasajero("ListaCircular.dot", "Maletas.png");
        }
        grafi.repaint();
    }//GEN-LAST:event_pasarTurnoActionPerformed
    
    public void agregarPasajeros(){
            NodoAvion aux = la.inicio;
            NodoAvion antaux = null;
            do{
                for (int j = 0; j < aux.avion.pasajeros; j++) {
                cp.agregarFinal();
                }
                aux=aux.siguiente;
            }
            while(aux!=null);
    }
    public void eliminarPasajeros(){
        for (int i = 0; i < 5; i++) {
            cp.eliminarInicio();
        }
    }
    public void eliminarMaletas(){
        NodoPasajero aux= cp.inicio;
        while(aux!=null){
            for (int i = 0; i < aux.pasajero.maletas; i++) {
                lcm.eliminarPrimero();
            }
            aux=aux.siguiente;
        }
    }
    public void limpiarArea(){
        Consola.setText("");
    }
    public void agregarMaletas(){
         NodoPasajero aux = cp.inicio;
            NodoAvion antaux = null;
            do{
                for (int j = 0; j < aux.pasajero.maletas; j++) {
                lcm.insertar(turno);
                }
                aux=aux.siguiente;
            }
            while(aux!=null);
    }
    public void AgManEliminar(){
        NodoAvion aux= la.inicio;
        while(aux!=null){
            if (aux.avion.turnosDesabordaje==1) {
                lm.AgregarInicio(la.delete(1).avion);
            }
            aux= aux.siguiente;
        }
        //aux.avion.setTurnosDesabordaje(0);
    }
    public void eliminarAviones(){
        NodoAvion aux= lm.inicio;
        while(aux!=null){
            if (aux.avion.turnosMantenimiento==1) {
                lm.delete(1);
            }
            aux= aux.siguiente;
        }
        //aux.avion.setTurnosMantenimiento(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Consola;
    private javax.swing.JButton comenzar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField noAviones;
    private javax.swing.JTextField noEstaciones;
    private javax.swing.JButton pasarTurno;
    // End of variables declaration//GEN-END:variables
}